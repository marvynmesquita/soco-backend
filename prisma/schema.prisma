// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Line {
  id          String  @id @default(uuid())
  number      String  @unique
  origin      String
  destination String
  polyline    String? // Armazena a polyline do Google Maps para desenhar a rota

  // A relação com as paradas agora é através da tabela de junção explícita
  stops StopOnRoute[]

  // Relação com os horários
  schedules Schedule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id        String  @id @default(uuid())
  time      String
  direction String
  notes     String?
  dayType   DayType

  line   Line   @relation(fields: [lineId], references: [id], onDelete: Cascade)
  lineId String
}

model Stop {
  id           String  @id @default(uuid())
  name         String
  neighborhood String?
  latitude     Float
  longitude    Float

  // A relação com as linhas agora é através da tabela de junção explícita
  lines StopOnRoute[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Tabela de junção para armazenar a ORDEM das paradas na linha
model StopOnRoute {
  line     Line @relation(fields: [lineId], references: [id], onDelete: Cascade)
  lineId   String
  stop     Stop @relation(fields: [stopId], references: [id], onDelete: Cascade)
  stopId   String
  sequence Int // A ordem da parada na rota (1, 2, 3...)

  @@id([lineId, stopId])
}

enum DayType {
  SEMANA
  SABADO
  DOMINGO
}